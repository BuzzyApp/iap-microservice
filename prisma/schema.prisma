// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Purchase {
  id                 String    @id @default(cuid())
  receiptId          String
  receipt            Receipt?  @relation(fields: [receiptId], references: [id], name: "receipt")
  originalPurchaseId String?
  originalPurchase   Purchase? @relation(fields: [originalPurchaseId], references: [id], name: "originalPurchase")
  linkedPurchaseId   String?
  linkedPurchase     Purchase? @relation(fields: [linkedPurchaseId], references: [id], name: "linkedPurchase")

  userId          String?   @db.VarChar(255)
  orderId         String?   @unique @db.VarChar(255)
  originalOrderId String?   @db.VarChar(255)
  linkedOrderId   String?   @db.VarChar(255)
  purchaseDate    DateTime  @default(now())
  receiptDate     DateTime  @default(now())
  refundDate      DateTime?
  refundReason    String?   @db.VarChar(20)
  isRefunded      Boolean   @default(false)
  isSandbox       Boolean   @default(false)
  productSku      String    @db.VarChar(255)
  quantity        Int       @default(0)
  platform        String    @db.VarChar(7)

  isTrial                   Boolean?
  isTrialConversion         Boolean?
  isIntroOfferPeriod        Boolean?
  isSubscription            Boolean  @default(false)
  isSubscriptionActive      Boolean?
  isSubscriptionRenewable   Boolean?
  isSubscriptionRetryPeriod Boolean?
  isSubscriptionGracePeriod Boolean?

  subscriptionPeriodType String?   @db.VarChar(6)
  subscriptionState      String?   @db.VarChar(12)
  subscriptionStatus     String?   @db.VarChar(12)
  subscriptionGroup      String?   @db.VarChar(255)
  cancellationReason     String?   @db.VarChar(23)
  expirationDate         DateTime?
  gracePeriodEndDate     DateTime?
  token                  String?   @db.Text
  linkedToken            String?   @db.Text
  createdAt              DateTime  @default(now())
  modifiedAt             DateTime  @updatedAt

  linkedPurchases   Purchase[] @relation("linkedPurchase")
  originalPurchases Purchase[] @relation("originalPurchase")

  @@index(fields: [userId])
  @@index(fields: [orderId])
  @@index(fields: [originalOrderId])
  @@index(fields: [linkedOrderId])
  @@map("purchases")
}

model Receipt {
  id         String   @id @default(cuid())
  userId     String?  @db.VarChar(255)
  platform   String   @db.VarChar(7)
  hash       String   @unique @db.Char(32)
  token      String   @db.Text
  data       Json     @db.Json
  createdAt  DateTime @default(now())
  modifiedAt DateTime @updatedAt

  purchases Purchase[] @relation("receipt")

  @@index(fields: [userId])
  @@index(fields: [hash])
  @@map("receipts")
}
